name: Crypto-V Deployment

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: npm installation
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v1
        with:
          host: 'http://3.87.9.234/'
          login: ${{ secrets.SONAR_TOKEN }}
          projectBaseDir: .
          projectName: crypto-v
          projectKey: crypto-v

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_IAM_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_IAM_ACCESS_SECRET_KEY }}
          aws-region: 'us-east-1'

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker image
        id: build-image
        env:
          ECR_REGISTRY: 666484523613.dkr.ecr.us-east-1.amazonaws.com
          IMAGE_NAME: crypto-v
          TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$IMAGE_NAME:$TAG .
          docker push $ECR_REGISTRY/$IMAGE_NAME:$TAG

      - name: Deploy to ECS
        id: deploy-to-ecs
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: crypto-v-tdf
          service: crypto-v-service-1
          cluster: crypto-v-cluster
          container-name: crypto-v
          container-image: ${{ env.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
          wait-for-service-stability: 'true'
